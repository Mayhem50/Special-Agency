{"version":3,"file":"api-resources.js","sourceRoot":"","sources":["../../../src/services/api-resources.ts"],"names":[],"mappings":"AAAA,OAAO,oBAAoB,MAAM,iBAAiB,CAAC;AAEnD,MAAM,QAAQ,GAAG,yCAAyC,CAAC;AAQ3D,eAAe;IACb,KAAK,EAAE;QACL,IAAI,EAAE,GAAG,QAAQ,aAAa;QAC9B,MAAM,EAAE,MAAM;QACd,QAAQ,EAAE,WAAW,CAAC,EAAE;YACtB,IAAI,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK;gBAAE,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC3F,CAAC;KACW;IAEd,MAAM,EAAE;QACN,IAAI,EAAE,GAAG,QAAQ,OAAO;QACxB,MAAM,EAAE,MAAM;QACd,QAAQ,EAAE,WAAW,CAAC,EAAE;YACtB,IAAI,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK;gBAAE,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;YACzF,oBAAoB,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnE,CAAC;KACW;IAEd,aAAa,EAAE;QACb,IAAI,EAAE,GAAG,QAAQ,cAAc;QAC/B,MAAM,EAAE,MAAM;KACF;IAEd,KAAK,EAAE,KAAK,EAAE,KAAgB,EAAE,IAAU,EAAE,EAAE;;QAC5C,IAAI;YACF,MAAM,KAAK,GAAG,oBAAoB,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC;YACzD,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE;gBAC9C,MAAM,EAAE,KAAK,CAAC,MAAM;gBACpB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;gBAC7C,OAAO,EAAE;oBACP,cAAc,EAAE,kBAAkB;oBAClC,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC,UAAU,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;iBAC9C;aACF,CAAC,CAAC;YAEH,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YAEnC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACd,MAAM,IAAI,CAAC;YAEb,MAAA,KAAK,CAAC,QAAQ,+CAAd,KAAK,EAAY,IAAI,CAAC,CAAC;YACvB,OAAO,IAAI,CAAC;SACb;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,KAAK,CAAC;SACb;IACH,CAAC;CACF,CAAC","sourcesContent":["import AuthorizationService from './authorization';\n\nconst BASE_URL = 'https://special-agency.herokuapp.com/v1';\n\nexport interface FecthInfo {\n  path: string;\n  method: 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE';\n  callback?: (data: any) => any;\n}\n\nexport default {\n  LOGIN: {\n    path: `${BASE_URL}/auth/login`,\n    method: 'POST',\n    callback: reponseBody => {\n      if (!reponseBody || !reponseBody.data.token) throw new Error('Bad data format on login');\n    },\n  } as FecthInfo,\n\n  SIGNUP: {\n    path: `${BASE_URL}/auth`,\n    method: 'POST',\n    callback: reponseBody => {\n      if (!reponseBody || !reponseBody.data.token) throw new Error('Bad data format on login');\n      AuthorizationService.instance().setToken(reponseBody.data.token);\n    }\n  } as FecthInfo,\n\n  SIGNUP_GOOGLE: {\n    path: `${BASE_URL}/auth/google`,\n    method: 'POST'\n  } as FecthInfo,\n\n  fetch: async (infos: FecthInfo, body?: any) => {\n    try {\n      const token = AuthorizationService.instance().getToken();\n      const response = await window.fetch(infos.path, {\n        method: infos.method,\n        body: body ? JSON.stringify(body) : undefined,\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: token ? `Bearer ${token}` : '',\n        },\n      });\n\n      const data = await response.json();\n\n      if (!response.ok)\n        throw data;\n\n      infos.callback?.(data);\n      return data;\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  },\n};\n"]}