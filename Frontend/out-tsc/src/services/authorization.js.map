{"version":3,"file":"authorization.js","sourceRoot":"","sources":["../../../src/services/authorization.ts"],"names":[],"mappings":"AAAA,MAAM,SAAS,GAAG,cAAc,CAAC;AAEjC,MAAM,CAAC,OAAO,OAAO,oBAAoB;IAGvC,gBAAsB,CAAC;IAEvB,MAAM,CAAC,QAAQ;QACb,IAAG,CAAC,IAAI,CAAC,SAAS;YAAE,IAAI,CAAC,SAAS,GAAG,IAAI,oBAAoB,EAAE,CAAC;QAChE,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,QAAQ,CAAC,KAAa;QACpB,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAChD,CAAC;IAED,QAAQ;QACN,OAAO,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAChD,CAAC;IAED,YAAY;QACV,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAG,KAAK;YAAE,OAAO,IAAI,CAAC;QACtB,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAAA,CAAC","sourcesContent":["const TOKEN_KEY = 'Bearer_Token';\n\nexport default class AuthorizationService {\n  private static _instance?: AuthorizationService;\n\n  private constructor(){}\n\n  static instance(){\n    if(!this._instance) this._instance = new AuthorizationService();\n    return this._instance;\n  }\n\n  setToken(token: string) {\n    window.localStorage.setItem(TOKEN_KEY, token);\n  }\n\n  getToken() {\n    return window.localStorage.getItem(TOKEN_KEY);\n  }\n\n  isAuthorized(){\n    const token = this.getToken();\n    if(token) return true;\n    return false; \n  }\n};\n"]}